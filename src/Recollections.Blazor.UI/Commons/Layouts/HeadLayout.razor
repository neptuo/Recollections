@inherits LayoutComponentBase

<nav class="navbar navbar-inverse navbar navbar-expand-lg navbar-dark bg-dark main-navbar sticky-top block-icons">
    <div class="container">
        <a class="navbar-brand" href="@Navigator.UrlTimeline()">
            <img src="/img/logo.png" width="30" height="30" class="d-inline-block align-top" alt="">
        </a>

        <div class="navbar-brand @(IsMainMenuVisible ? "" : "d-none d-md-inline d-lg-none d-xl-inline")">
            Recollections
        </div>
        <div class="@(IsMainMenuVisible ? "d-none" : "d-block d-lg-none")">
            <ul class="navbar-nav small-navbar-nav flex-row">
                @foreach (var menuItem in MenuItems)
                {
                    if (menuItem.IsSmall)
                    {
                        <li class="nav-item">
                            <NavLink class="nav-link" href="@menuItem.Url" target="@(menuItem.IsNewWindow ? "_blank" : null)" Match="@menuItem.Match">
                                <Icon Identifier="@menuItem.Icon" />
                            </NavLink>
                        </li>
                    }
                }
            </ul>
        </div>

        <button class="navbar-toggler px-0" type="button" @onclick="ToggleMainMenu">
            <span class="navbar-toggler-icon"></span>
        </button>

        <div class="navbar-collapse justify-content-between menu-collapse @(IsMainMenuVisible ? "menu-show" : "")">
            <ul class="navbar-nav large-navbar-nav w-100">
                @for (int i = 0; i < MenuItems.Count; i++)
                {
                    var menuItem = MenuItems[i];
                    if (menuItem.IsLarge)
                    {
                        <li class="nav-item @(i == MenuItems.Count - 1 ? "me-lg-auto" : "")">
                            <NavLink class="nav-link" href="@menuItem.Url" target="@(menuItem.IsNewWindow ? "_blank" : null)" Match="@menuItem.Match">
                                <Icon Identifier="@menuItem.Icon" />
                                @menuItem.Text
                            </NavLink>
                        </li>
                    }
                }
                <PwaInstall OnUpdateAvailable="@(() => IsMainMenuVisible = true)" />
                <UserInfo OnChangePassword="@(() => { IsMainMenuVisible = false; ChangePasswordModal.Show(); })" />
            </ul>
        </div>
    </div>
</nav>

<ExceptionPanel @ref="ExceptionPanel" OnReadOnlyClick="OnReadOnlyClickAsync">
    <UnauthorizedContent>
        <Unauthorized />
    </UnauthorizedContent>
    <NotFoundContent>
        <NotFound />
    </NotFoundContent>
</ExceptionPanel>

@Body

<ChangePasswordModal @ref="ChangePasswordModal" />