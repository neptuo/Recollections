@if (Layout == ButtonLayout.Button)
{
    <button class="btn btn-sm btn-success" @onclick="@OnShow">
        <Icon Prefix="fas" Identifier="share-alt" />
        Share
    </button>
}
else if (Layout == ButtonLayout.DropdownItem)
{
    <a class="dropdown-item" @onclick="@OnShow">
        <Icon Prefix="fas" Identifier="share-alt" />
        Share with others
    </a>
}

<TemplateContent Name="Dialogs">
    <Modal @ref="@Modal">
        <TitleContent>
            <div class="d-flex align-items-center justify-content-between">
                <div>
                    <Icon Prefix="fas" Identifier="share-alt" />
                    Share
                </div>
                <div class="mt-1 ms-4 fs-6">
                    @if (Model != null && (BeingId == null || UserState.UserId != BeingId))
                    {
                        <div class="form-check form-switch">
                            <input class="form-check-input" type="checkbox" role="switch" id="share-inherited-check" @bind="Model.IsInherited">
                            <label class="form-check-label" for="share-inherited-check">Inherit sharing</label>
                        </div>
                    }
                </div>
            </div>
        </TitleContent>
        <ChildContent>
            @if (!String.IsNullOrEmpty(ErrorMessage))
            {
                <div class="alert alert-danger">
                    @ErrorMessage
                </div>
            }

            @if (IsLoading)
            {
                <span class="loading-message">Loading...</span>
            }

            @if (Model != null)
            {
                @if (BeingId != null && UserState.UserId == BeingId)
                {
                    <div class="text-muted mb-3">
                        This being represents yourself in Recollections. Sharing with other users is managed by your connections. Here you can only select if anonymous people can see your profile.
                    </div>
                }

                @if (Model.IsInherited)
                {
                    <div class="text-muted mb-3">
                        Sharing is inherited. Permissions are set based on story and connection sharing.
                    </div>
                }
                else
                {
                    <ListView Items="@Model.Models" IsLoading="@IsLoading" Context="model" T="@ShareModel">
                        <div class="row my-1" @key="@model.UserName">
                            <div class="col">
                                <strong class="align-middle">
                                    @(model.UserName ?? "public")
                                </strong>
                            </div>
                            <div class="col-auto">
                                <div class="btn-group">
                                    @PermissionButton(model, null, "Not Shared")
                                    @PermissionButton(model, Permission.Read, "Reader")
                                    @if (model.UserName != "public")
                                    {
                                        @PermissionButton(model, Permission.CoOwner, "Co-owner")
                                    }
                                </div>
                            </div>
                        </div>
                        @if (model.UserName == "public" && Model.Models.Count > 1)
                        {
                            <hr />
                        }
                    </ListView>
                }
            }
        </ChildContent>
        <Buttons>
            <button class="btn btn-primary btn-sm" @onclick="SaveAsync">Save</button>
        </Buttons>
    </Modal>
</TemplateContent>

@code
{
    public RenderFragment PermissionButton(ShareModel model, Permission? target, string text) =>
        @<button type="button" class="btn btn-sm my-0 @(model.Permission == target ? "btn-secondary" : "btn-outline-secondary")" @onclick="@(() => model.Permission = target)">@text</button>
    ;
}