<Modal @ref="Modal" Title="Select a Story or Chapter">
    <ChildContent>
        @if (!String.IsNullOrEmpty(ErrorMessage))
        {
            <div class="alert alert-danger">
                @ErrorMessage
            </div>
        }

        <div class="story-picker">
            <ListView Items="@Stories" IsLoading="@IsLoading" EmptyMessage="You don't have any story..." Context="story">
                <div class="story">
                    <a @onclick="(async () => await SelectAsync(story, null))">
                        <span class="title">
                            @story.Title
                        </span>
                    </a>
                    <div class="chapters">
                        @if (Chapters.TryGetValue(story.Id, out var chapters))
                        {
                            <ul>
                                @foreach (var chapter in chapters)
                                {
                                    <li>
                                        <a @onclick="(async () => await SelectAsync(story, chapter))">
                                            @chapter.Title
                                        </a>
                                    </li>
                                }
                            </ul>
                        }
                        else
                        {
                            <a @onclick="@(async () => await LoadChaptersAsync(story))">
                                <Icon Identifier="book" />
                                @story.Chapters chapters
                            </a>
                        }
                    </div>
                </div>
            </ListView>
        </div>
    </ChildContent>
    <Buttons>
        <button class="btn btn-sm btn-primary" title="Remove Story/Chapter from Entry" @onclick="(async () => await SelectAsync(null, null))">Clear</button>
    </Buttons>
</Modal>