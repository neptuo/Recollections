<Modal @ref="Modal" Title="@Title" CssClass="date-picker">
    <ChildContent>
        @if (CurrentPart == DatePickerPart.Year)
        {
            <h5 class="d-flex align-items-center mb-2">
                <button class="me-auto btn btn btn-secondary btn-sm" @onclick="(() => CurrentYear -= 12)">Prev</button>
                <button class="ms-auto btn btn btn-secondary btn-sm" @onclick="(() => CurrentYear += 12)">Next</button>
            </h5>

            <div class="row">
                @for (int i = CurrentYear - 6; i < CurrentYear + 6; i++)
                {
                    var year = i;

                    <div class="col-3 d-flex align-items-stretch p-2 aspect-1">
                        <button class="btn btn-outline-primary d-block w-100 text-truncate @(Value?.Year == year ? "selected" : "")" @onclick="@(() => OnYearSelected(year))">
                            @i
                        </button>
                    </div>
                }
            </div>
        }
        else if (CurrentPart == DatePickerPart.Month)
        {
            <h5 class="d-flex align-items-center mb-2">
                <button class="me-auto btn btn btn-secondary btn-sm" @onclick="(() => CurrentYear--)">Prev</button>
                <span class="cursor-pointer" @onclick="(() => CurrentPart = DatePickerPart.Year)">
                    @CurrentYear
                </span>
                <button class="ms-auto btn btn btn-secondary btn-sm" @onclick="(() => CurrentYear++)">Next</button>
            </h5>

            <div class="row">
                @for (int i = 0; i < MonthNames.Length - 1; i++)
                {
                    var month = i + 1;
                    var monthName = MonthNames[i];

                    <div class="col-3 d-flex align-items-stretch p-2 aspect-1">
                        <button class="btn btn-outline-primary d-block w-100 text-truncate @(Value?.Year == CurrentYear && Value?.Month == month ? "selected" : "")" @onclick="@(() => OnMonthSelected(month))">
                            @monthName
                        </button>
                    </div>
                }
            </div>
        }
        else
        {
            <h5 class="d-flex align-items-center mb-2">
                <button class="me-auto btn btn btn-secondary btn-sm" @onclick="@(() => { (CurrentYear, CurrentMonth) = PrevMonth(CurrentYear, CurrentMonth); })">Prev</button>
                <span class="cursor-pointer" @onclick="(() => CurrentPart = DatePickerPart.Month)">
                    @MonthNames[CurrentMonth - 1]
                    @CurrentYear
                </span>
                <button class="ms-auto btn btn btn-secondary btn-sm" @onclick="@(() => { (CurrentYear, CurrentMonth) = NextMonth(CurrentYear, CurrentMonth); })">Next</button>
            </h5>

            <MonthView Year="@CurrentYear" Month="@CurrentMonth" Context="day">
                <button class="btn btn-outline-primary d-block w-100 w-100 text-truncate @(Value?.Year == CurrentYear && Value?.Month == CurrentMonth && Value?.Day == day ? "selected" : "")" @onclick="@(() => OnDaySelected(day))">
                    @day
                </button>
            </MonthView>
        }
    </ChildContent>
    <Buttons>
        <button class="btn btn-sm btn-primary" @onclick="OnTodaySelected">Today</button>
    </Buttons>
</Modal>