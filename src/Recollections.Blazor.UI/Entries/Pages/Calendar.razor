@page "/calendar"
@page "/calendar/{Year:int}"
@page "/calendar/{Year:int}/{Month:int}"


<DocumentTitle Value="@Title" />

<h3 class="d-flex align-items-center my-4">
    <a class="me-auto btn btn btn-secondary btn-sm" href="@GetPrevPeriodUrl()">Prev</a>
    <span>
        <Icon Prefix="far" Identifier="calendar-alt" CssClass="me-2" OnClick="@(() => DatePicker.Show())" />

        @if (IsMonthView)
        {
            <span class="cursor-pointer" @onclick="@(() => DatePicker.Show())">
                @System.Globalization.DateTimeFormatInfo.CurrentInfo.MonthNames[Month.Value - 1]
            </span>
            <a class="lnk-dark-arrow" href="@Navigator.UrlCalendar(Year.Value)">
                @Year
            </a>
        }
        else
        {
            <span class="cursor-pointer" @onclick="@(() => DatePicker.Show())">
                @Year
            </span>
        }

    </span>
    <a class="ms-auto btn btn btn-secondary btn-sm" href="@GetNextPeriodUrl()">Next</a>
</h3>

@if (IsMonthView)
{
    <MonthView Year="@Year.Value" Month="@Month.Value" Context="day">
        <div>
            <span class="badge bg-light text-dark">
                @day
            </span>
        </div>

        @foreach (var model in Models.Where(e => e.When.Day == day))
        {
            <a href="@Navigator.UrlEntryDetail(model.Id)" class="badge bg-salmon">
                @model.Title
            </a>
        }
    </MonthView>
}
else if (IsYearView)
{
    <div class="row yearlendar">
        @for (int i = 0; i < 12; i++)
        {
            var month = i + 1;
            <div class="col-12 col-sm-6 col-md-4 col-lg-2 mb-4">
                <strong class="mb-1 d-block text-center">
                    <a class="lnk-dark-arrow" href="@Navigator.UrlCalendar(Year.Value, month)">
                        @System.Globalization.DateTimeFormatInfo.CurrentInfo.MonthNames[i]
                    </a>
                </strong>

                @foreach (var model in Models.Where(e => e.When.Month == month))
                {
                    <div>
                        <a href="@Navigator.UrlEntryDetail(model.Id)" class="badge bg-salmon">
                            @model.Title
                        </a>
                    </div>
                }
            </div>
        }
    </div>
}

<DatePicker @ref="DatePicker" Part="@(IsMonthView ? DatePickerPart.Month : DatePickerPart.Year)" Value="@SelectedDate" ValueChanged="@OnDatePicked" />