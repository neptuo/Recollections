@page "/stories/{StoryId}"
@inherits UserStateComponentBase

@if (Model != null)
{
    <DocumentTitle Value="@Model.Title" />

    <CascadingValue Value="@Model">
        <PermissionContainer State="@Permissions">
            <div class="entry-detail">
                <h2 class="title">
                    <InlineTextEdit Value="@Model.Title" ValueChanged="@(async value => await SaveTitleAsync(value))" />
                </h2>
                <UserInformation Owner="@Owner" />
                <div class="text">
                    <InlineMarkdownEdit Value="@Model.Text" PlaceHolder="No description..." ValueChanged="@(async value => await SaveTextAsync(value))" />
                </div>
                <div class="entries">
                    <Neptuo.Recollections.Entries.Pages.Timeline AllowCreate="false" AllowMore="false" DataGetter="@(offset => Api.GetStoryTimelineAsync(Model.Id, offset))" />
                </div>

                <ActionPanel>
                    <PermissionView Request="@PermissionRequest.Write">
                        <button type="button" class="btn btn-sm btn-primary" @onclick="@AddChapter" title="Add Chapter">
                            <Icon Identifier="book" />
                            Add Chapter
                        </button>
                        <button type="button" class="btn btn-sm btn-primary" @onclick="@(() => SelectEntry(null))" title="Add Story Entry">
                            <Icon Prefix="fas" Identifier="comment-alt" />
                            Add Story Entry
                        </button>
                    </PermissionView>
                    <PermissionView Request="@PermissionRequest.Owner">
                        <ShareButton StoryId="@Model.Id" />
                        <button type="button" class="btn btn-sm btn-danger" @onclick="@(async () => await DeleteAsync())" title="Delete Story">
                            <Icon Identifier="trash-alt" />
                            Delete Story
                        </button>
                    </PermissionView>
                </ActionPanel>

                <div class="chapters">
                    @foreach (var chapter in Model.Chapters)
                    {
                        <div class="chapter">
                            <h4>
                                <InlineTextEdit Value="@chapter.Title" ValueChanged="@(async value => await SaveChapterTitleAsync(chapter, value))" />
                            </h4>
                            <div class="text">
                                <InlineMarkdownEdit Value="@chapter.Text" PlaceHolder="No description..." ValueChanged="@(async value => await SaveChapterTextAsync(chapter, value))" />
                            </div>
                            <div class="entries">
                                <Neptuo.Recollections.Entries.Pages.Timeline AllowCreate="false" AllowMore="false" DataGetter="@(offset => Api.GetStoryChapterTimelineAsync(Model.Id, chapter.Id, offset))" />
                            </div>

                            <ActionPanel>
                                <PermissionView Request="@PermissionRequest.Write">
                                    <button type="button" class="btn btn-sm btn-outline-primary border-0" @onclick="@(() => SelectEntry(chapter))" title="Add Chapter Entry">
                                        <Icon Prefix="fas" Identifier="plus" />
                                        Add Entry
                                    </button>
                                    <button type="button" class="btn btn-sm btn-outline-danger border-0" @onclick="@(async () => await DeleteChapterAsync(chapter))" title="Delete Chapter">
                                        <Icon Identifier="trash-alt" />
                                        Delete
                                    </button>
                                </PermissionView>
                            </ActionPanel>
                        </div>
                    }
                </div>
            </div>
        </PermissionContainer>
    </CascadingValue>

    <EntryPicker @ref="EntryPicker" Selected="EntrySelected" />
}