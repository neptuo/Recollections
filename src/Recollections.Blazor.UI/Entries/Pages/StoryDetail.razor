@page "/stories/{StoryId}"
@inherits UserStateComponentBase

@if (Model != null)
{
    <DocumentTitle Value="@Model.Title" />

    <CascadingValue Value="@Model">
        <PermissionContainer State="@Permissions">
            <div class="entry-detail">
                <h2 class="d-flex title">
                    <InlineTextEdit Value="@Model.Title" ValueChanged="@(async value => await SaveTitleAsync(value))" EditModeCssClass="flex-grow-1" />
                    <DropdownButton CssClass="ms-1">
                        <PermissionView Request="PermissionRequest.Write">
                            <DropdownItem Icon="book" Text="Add Chapter" OnClick="AddChapter" Title="Add Chapter" />
                            <DropdownItem Icon="comment-alt" Text="Add Story Entry" OnClick="() => SelectEntry(null)" Title="Add Story Entry" />
                        </PermissionView>
                        <PermissionView Request="PermissionRequest.Owner">
                            <ShareButton StoryId="@Model.Id" Layout="ButtonLayout.DropdownItem" />
                        </PermissionView>
                        <ShareLinkButton Layout="ButtonLayout.DropdownItem" />
                        <PermissionView Request="PermissionRequest.Owner">
                            <DropdownSeparator />
                            <DropdownItem Icon="trash-alt" Text="Delete Story" OnClick="@(async () => await DeleteAsync())" CssClass="text-danger" Title="Delete Story" />
                        </PermissionView>
                    </DropdownButton>
                </h2>
                <UserInformation Owner="@Owner" />
                <div class="text">
                    <InlineMarkdownEdit Value="@Model.Text" PlaceHolder="No description..." ValueChanged="@(async value => await SaveTextAsync(value))" />
                </div>
                <div class="entries">
                    <Timeline Data="@Entries[Model.Id]" ShowStoryInfo="false" />
                </div>

                <div class="chapters">
                    @foreach (var chapter in Model.Chapters)
                    {
                        <div class="chapter">
                            <h4 class="d-flex">
                                <InlineTextEdit Value="@chapter.Title" ValueChanged="@(async value => await SaveChapterTitleAsync(chapter, value))" EditModeCssClass="flex-grow-1" />
                                <PermissionView Request="PermissionRequest.Write">
                                    <DropdownButton CssClass="ms-1">
                                        <DropdownItem Icon="plus" Text="Add Entry" OnClick="() => SelectEntry(chapter)" Title="Add Chapter Entry" />
                                        <DropdownSeparator />
                                        <DropdownItem Icon="trash-alt" Text="Delete" OnClick="@(async () => await DeleteChapterAsync(chapter))" CssClass="text-danger" Title="Delete Chapter" />
                                    </DropdownButton> 
                                </PermissionView>
                            </h4>
                            <div class="text">
                                <InlineMarkdownEdit Value="@chapter.Text" PlaceHolder="No description..." ValueChanged="@(async value => await SaveChapterTextAsync(chapter, value))" />
                            </div>
                            <div class="entries">
                                <Timeline Data="@Entries[chapter.Id]" ShowStoryInfo="false" />
                            </div>
                        </div>
                    }
                </div>
            </div>
        </PermissionContainer>
    </CascadingValue>

    <EntryPicker @ref="EntryPicker" Selected="EntrySelected" />
}