@using Neptuo.Recollections.Entries
@inherits InlineEdit<LocationModel>

<div class="inline-editor @GetModeCssClass()">
    @if (IsEditMode)
    {
        <form class="form-inline" @onsubmit="@OnSaveValueAsync">
            <div class="input-group">
                <input type="text" class="form-control" @bind="Value.Latitude" placeholder="Latitude" />
                <input type="text" class="form-control" @bind="Value.Longitude" placeholder="Longitude" />
                <input type="text" class="form-control" @bind="Value.Altitude" placeholder="Altitude" />
                <button class="btn btn-outline-success btn-save" title="Save changes">
                    <Icon Identifier="check" />
                </button>
                <button class="btn btn-outline-danger btn-cancel" @onclick="@OnResetAsync" title="Revert changes">
                    <Icon Identifier="times" />
                </button>
                @if (Delete != null)
                {
                    <button class="btn btn-outline-danger btn-cancel" @onclick="@(() => Delete(Value))" title="Delete">
                        <Icon Identifier="trash-alt" />
                    </button>
                }
            </div>
        </form>
    }
    else
    {
        <a class="inline-editor-value" @onclick="@OnEditAsync">
            <Icon Identifier="pen" />

            <Icon Identifier="location-arrow" />
            @if (Value == null || !Value.HasValue())
            {
                <span class="ms-1 inline-editor-content value-placeholder">@(PlaceHolder ?? "No value...")</span>
            }
            else
            {
                <span class="ms-1 inline-editor-content">@Value?.ToString()</span>
            }
        </a>
    }
</div>